"""
Document how all the notebooks for a single experiment are connected.
"""

configfile: "config/train_proteinGroups.yaml"
print(config)

nb_outfolder = 'runs'

rule all:
    input: 
        expand("{nb_outfolder}/experiment_03/"
            "{dataset}/{nb}",
            nb_outfolder=nb_outfolder,
            dataset=config['DATASET'],
            nb='14_experiment_03_latent_space_analysis.ipynb')

# # rule template

# nb = '.ipynb'
# rule name:
#     input:
#         nb=nb,
#     output:
#         nb=f"{nb_outfolder}/{nb}",
#     shell:
#         "papermill {input.nb} {output.nb}"


# separate workflow by level -> provide custom configs
nb_pre='13_training_data_splitting.ipynb'
nb = '14_experiment_03_data.ipynb'
rule create_splits:
    input:
        nb=nb,
        intensities='data/single_datasets/{dataset}/Q_Exactive_HF_X_Orbitrap_Exactive_Series_slot_#6070.pkl',
        metadata='data/files_selected_metadata.csv',
        previous=f"data/single_datasets/{{dataset}}/{nb_pre}"
    output:
        data=f"{nb_outfolder}""/experiment_03/{dataset}/data/train_X.pkl",
        nb=f"{nb_outfolder}/experiment_03{{dataset}}/{nb}",
    params:
        folder_experiment=f"{nb_outfolder}/experiment_03/{{dataset}}",
    shell:
        "papermill {input.nb} {output.nb} -p FN_INTENSITIES {input.intensities}"
        " -p fn_rawfile_metadata {input.metadata}"
        " -r folder_experiment {params.folder_experiment}"
        " && jupyter nbconvert --to html {output.nb}"

nb_pre='14_experiment_03_data.ipynb'
nb = '14_experiment_03_latent_space_analysis.ipynb'
rule train_models:
    input:
        nb=nb,
        folder_experiment=f"{nb_outfolder}/experiment_03/"
                          "{dataset}",
        previous=f"{nb_outfolder}/experiment_03{{dataset}}/{nb_pre}"
    output:
        nb=f"{nb_outfolder}/experiment_03/"
           f"{{dataset}}/Q_Exactive_HF_X_Orbitrap_Exactive_Series_slot_#6070/{nb}",
    shell:
        "papermill {input.nb} {output.nb}"
        " -r folder_experiment {input.folder_experiment}"
        " && jupyter nbconvert --to html {output.nb}"
