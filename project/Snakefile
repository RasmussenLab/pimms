"""
Document how all the notebooks for a single experiment are connected.
"""

configfile: "config/proteinGroups.yaml"

folder_experiment = config['folder_experiment']


# print(f"{folder_experiment = }")

rule all:
    input: 
        expand("{folder_experiment}/{nb}",
            folder_experiment=config['folder_experiment'],
            nb=['14_experiment_03_train_collab.ipynb',
                '14_experiment_03_train_dae.ipynb',
                '14_experiment_03_train_vae.ipynb'
                ])

# # rule template

# nb = '.ipynb'
# rule name:
#     input:
#         nb=nb,
#     output:
#         nb=f"{nb_outfolder}/{nb}",
#     shell:
#         "papermill {input.nb} {output.nb}"


# separate workflow by level -> provide custom configs
nb = '14_experiment_03_data.ipynb'
rule create_splits:
    input:
        nb=nb,
        configfile = config['config_split']
    output:
        train_split="{folder_experiment}/data/train_X.pkl",
        nb="{folder_experiment}"
           f"/{nb}",
    params:
        folder_experiment="{folder_experiment}"
    shell:
        "papermill {input.nb} {output.nb}"
        " -f {input.configfile}"
        " -r folder_experiment {params.folder_experiment}"
        " && jupyter nbconvert --to html {output.nb}"

rule train_models:
    input:
        nb="{nb}",
        train_split="{folder_experiment}/data/train_X.pkl",
        configfile=config['config_train']
    output:
        nb="{folder_experiment}/{nb}",
    params:
        folder_experiment="{folder_experiment}"
    shell:
        "papermill {input.nb} {output.nb}"
        " -f {input.configfile}"
        " -r folder_experiment {params.folder_experiment}"
        " && jupyter nbconvert --to html {output.nb}"
